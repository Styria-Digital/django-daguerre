from hashlib import sha1

from django.core.cache import cache


CACHE_TIME = 15


def get_cache_key(*args):
	"""Returns a hashed key used to cache responses for a given ``ident``, ``width``, and ``height``. ``ident`` may be anything - for example, ``<app_label>.<model>.<pk>`` or ``<image_path>``."""
	return sha1(''.join([unicode(arg) for arg in args])).hexdigest()


def get_cache(ident, width, height, max_width, max_height, method, crop):
	"""Returns the cache for the key generated by :func:`get_cache_key`."""
	return cache.get(get_cache_key(ident, width, height, max_width, max_height, method, crop))


def set_cache(ident, width, height, max_width, max_height, method, crop, value):
	"""Sets the cache for the key generated by :func:`get_cache_key`."""
	cache.set(get_cache_key(ident, width, height, max_width, max_height, method, crop), value, CACHE_TIME)


def clear_cache(ident, width, height, max_width, max_height, method, crop):
	"""Clears the cache fro the key generated by :func:`get_cache_key`."""
	cache.delete(get_cache_key(ident, width, height, max_width, max_height, method, crop))